library(RSQLite)
library(AnnotationForge)
go_df <- read.table("../3_final-result/Gmax_goev_GOMAP_for_makeOrgPackage.txt.gz", head=T, sep="\t")
go_df <- go_df[!duplicated(go_df),]
head(go_df)
makeOrgPackage(go=go_df,
               version = "1.0",
               maintainer = "FENG Lei <fengleiluck@gmail.com>",
               author="FENG Lei <fengleiluck@gmail.com>",
               outputDir = "./",
               tax_id = "3847",
               genus = "Glycine",
               species = "max",
               goTable = "go"
)
write.csv(go_df, "go_df.txt")
q()
head(go_df)
finchGOFile <- system.file("extdata","../3_final-result/Gmax_goev_GOMAP_for_makeOrgPackage.txt.gz",package="AnnotationForge")
head(finchGOFile)
head(extdata)
fGO <- read.table(finchGOFile,sep="\t")
?system.file
finchGOFile <- system.file("../3_final-result/","Gmax_goev_GOMAP_for_makeOrgPackage.txt.gz",package="AnnotationForge")
fGO <- read.table(finchGOFile,sep="\t")
fGO <- read.table(../3_final-result/Gmax_goev_GOMAP_for_makeOrgPackage.txt.gz,sep="\t")
fGO <- read.table("../3_final-result/Gmax_goev_GOMAP_for_makeOrgPackage.txt.gz", sep="\t")
head(fGO)
fGO <- read.table("../3_final-result/Gmax_goev_GOMAP_for_makeOrgPackage.txt.gz", sep="\t", head=TRUE)
head(fGO)
fGO <- fGO[fGO[,2]!="",]
fGO <- fGO[fGO[,3]!="",]
colnames(fGO) <- c("GID","GO","EVIDENCE")
head(fGO)
dim(fGO)
go_df <- go_df[!duplicated(fGO),]
dim(fGO)
dim(go_df)
head(go_df)
library(AnnotationForge)
makeOrgPackage(go=go_df,
               version = "0.0.1",
               maintainer = "FENG Lei <fengleiluck@gmail.com>",
               author="FENG Lei <fengleiluck@gmail.com>",
               outputDir = "./",
               tax_id = "3847",
               genus = "Glycine",
               species = "max",
               goTable = "go"
)
go_df <- go_df[!duplicated(go_df),]
makeOrgPackage(go=go_df,
               version = "0.0.1",
               maintainer = "FENG Lei <fengleiluck@gmail.com>",
               author="FENG Lei <fengleiluck@gmail.com>",
               outputDir = "./",
               tax_id = "3847",
               genus = "Glycine",
               species = "max",
               goTable = "go"
)
head(go_df)
head(fGO)
head(fGO[2,])
head(fGO[,2])
head(fGO[,3])
head(fGO[,4])
fGO <- read.table(../3_final-result/GMA_GO_TERM.txt, sep="\t", head=TRUE)
fGO <- read.table("../3_final-result/GMA_GO_TERM.txt", sep="\t", head=TRUE)
go_df <- fGO[!duplicated(go_df),]
go_df <- fGO[!duplicated(fGO),]
makeOrgPackage(go=go_df,
               version = "0.0.1",
               maintainer = "FENG Lei <fengleiluck@gmail.com>",
               author="FENG Lei <fengleiluck@gmail.com>",
               outputDir = "./",
               tax_id = "3847",
               genus = "Glycine",
               species = "max",
               goTable = "go"
)
heaf(fGO)
head(fGO)
go_df <- go_df[,c(1,2,4)]
head(go_df)
makeOrgPackage(go=go_df,
               version = "0.0.1",
               maintainer = "FENG Lei <fengleiluck@gmail.com>",
               author="FENG Lei <fengleiluck@gmail.com>",
               outputDir = "./",
               tax_id = "3847",
               genus = "Glycine",
               species = "max",
               goTable = "go"
)
write.csv(fGO, "fGO_check.txt")
fGO <- read.table("../3_final-result/GMA_GO_TERM.txt", sep="\t", head=TRUE)
go_df <- fGO[!duplicated(fGO),]
head(go_df)
makeOrgPackage(go=go_df,
               version = "0.0.1",
               maintainer = "FENG Lei <fengleiluck@gmail.com>",
               author="FENG Lei <fengleiluck@gmail.com>",
               outputDir = "./",
               tax_id = "3847",
               genus = "Glycine",
               species = "max",
               goTable = "go"
)
go_df <- go_df[,c(1,2,4)]
head(go_df)
makeOrgPackage(go=go_df,
               version = "0.0.1",
               maintainer = "FENG Lei <fengleiluck@gmail.com>",
               author="FENG Lei <fengleiluck@gmail.com>",
               outputDir = "./",
               tax_id = "3847",
               genus = "Glycine",
               species = "max",
               goTable = "go"
)
history(max.show=200)
q()
